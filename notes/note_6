在main函数中执行时，__name__这个变量值是”__main__”。而相对引用符号”.”的就是对应__name__这个变量。

当这个模块是在别的模块中被导入使用，此时的”.”就是原模块的文件名。在main函数中执行时，此时”.”变成了”__main__”。

所以，出现了这个问题。

总结：在独立运行的页面上导入模块要使用绝对地址









初次接触Python的人会很不习惯Python没有main主函数。 以下面的程序为例：
[python] view plain copy
#hello.py   
def foo():   
    str="function"   
    print(str);   
if __name__=="__main__":   
    print("main")   
    foo()   
其中if __name__=="__main__":这个程序块类似与Java和C语言的中main（主）函数 
在Cmd中运行结果 
C:\work\python\divepy>python hello.py 
main 
function 

在Python Shell中运行结果 
>>> import hello 
>>> hello.foo() 
function 
>>> hello.__name__ 
'hello' 
>>> 
可以发现这个内置属性__name__自动的发生了变化。 
这是由于当你以单个文件运行时，__name__便是__main__ 
当你以模块导入使用时，这个属性便是这个模块的名字。